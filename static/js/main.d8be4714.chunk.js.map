{"version":3,"sources":["components/Search.js","components/EmptyDiv.js","components/Navigation.js","components/ListItems.js","components/AddTask.js","components/ToDoList.js","components/App.js","serviceWorker.js","index.js"],"names":["Search","className","style","width","padding","border","fontSize","type","name","placeholder","onChange","this","props","handleInput","value","searchText","Component","EmptyDiv","numberList","backgroundColor","color","borderBottom","textAlign","Navigation","getStyle","index","state","activeTab","borderTopColor","settingTab","e","getTab","target","innerHTML","tabs","setState","map","el","i","margin","onClick","ListItems","todo","completed","todos","key","title","toggleComplete","bind","checked","deleteTask","AddTask","onSubmit","preventDefault","addingTask","ToDoList","App","ind","splice","forEach","filterData","array","search","filter","includes","filterTab","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8be4714.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/Search.css\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-div\">\r\n        <input\r\n          style={{\r\n            width: \"80%\",\r\n            padding: \"10px\",\r\n            border: \"none\",\r\n            fontSize: \"16px\"\r\n          }}\r\n          type=\"text\"\r\n          name=\"search\"\r\n          placeholder=\"Search ...\"\r\n          onChange={this.props.handleInput}\r\n          value={this.props.searchText}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass EmptyDiv extends Component {\r\n  render() {\r\n    const display = this.props.numberList === 0 ? true : false;\r\n    return display ? (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          color: \"#999\",\r\n          padding: \"40px 20px\",\r\n          borderBottom: \"1px solid #000\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        You don't have any tasks yet. Add a new task.\r\n      </div>\r\n    ) : (\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmptyDiv;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Navigation.css\";\r\nimport \"../index.css\";\r\n\r\nclass Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tabs: [\"Home\", \"Completed\", \"Not Completed\"],\r\n      activeTab: [true, false, false]\r\n    };\r\n  }\r\n\r\n  getStyle = (index) => {\r\n    if (this.state.activeTab[index] === true) {\r\n      return { borderTopColor: \"teal\", color: \"teal\" };\r\n    } else {\r\n      return { borderTopColor: \"#fff\", color: \"#000\" };\r\n    }\r\n  };\r\n\r\n  settingTab = e => {\r\n    this.props.getTab(e.target.innerHTML, this.state.tabs);\r\n    this.setState({\r\n     activeTab: this.state.activeTab.map((el, i) => {\r\n        if (e.target.innerHTML === this.state.tabs[i]) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <ul className=\"clearfix\" style={{ margin: \"0 auto\" }}>\r\n          <li style={this.getStyle(0)} onClick={this.settingTab}>\r\n            {this.state.tabs[0]}\r\n          </li>\r\n          <li style={this.getStyle(1)} onClick={this.settingTab}>\r\n            {this.state.tabs[1]}\r\n          </li>\r\n          <li style={this.getStyle(2)} onClick={this.settingTab}>\r\n            {this.state.tabs[2]}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/ListItems.css\";\r\nimport \"../styles/index.css\";\r\n\r\nexport class ListItems extends Component {\r\n  getStyle = todo => {\r\n    return todo.completed ? \"list-item-check\" : \"list-item-uncheck\";\r\n  };\r\n\r\n  render() {\r\n    return this.props.todos.map((todo, index) => (\r\n      <div className=\"clearfix todo-list\" key={index}>\r\n        <div className={this.getStyle(todo)}>{todo.title}</div>\r\n        <div className=\"check-box clearfix\">\r\n          <input\r\n            className=\"checkbox-style\"\r\n            type=\"checkbox\"\r\n            onChange={this.props.toggleComplete.bind(this, index)}\r\n            checked={todo.completed}\r\n          />\r\n          <button\r\n            className=\"delete-btn\"\r\n            onClick={this.props.deleteTask.bind(this, index)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default ListItems;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.title !== \"\") {\r\n      this.props.addingTask(this.state.title);\r\n      this.setState({\r\n        title: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"add-task-div\">\r\n        <input\r\n          style={{\r\n            width: \"90%\",\r\n            padding: \"10px\",\r\n            border: \"none\",\r\n            fontSize: \"16px\"\r\n          }}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n          placeholder=\"Add a Task ...\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Add Task\"\r\n          onClick={this.onSubmit}\r\n          style={{\r\n            backgroundColor: \"teal\",\r\n            color: \"#fff\",\r\n            padding: \"5px\",\r\n            border: \"none\",\r\n            fontSize: \"14px\"\r\n          }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from \"react\";\r\nimport ListItems from \"./ListItems\";\r\nimport AddTask from \"./AddTask\";\r\n\r\nclass ToDoList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AddTask addingTask={this.props.addingTask} />\r\n        <ListItems\r\n          todos={this.props.todos}\r\n          toggleComplete={this.props.toggleComplete}\r\n          deleteTask={this.props.deleteTask}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport EmptyDiv from \"./EmptyDiv\";\r\nimport Navigation from \"./Navigation\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport \"../styles/App.css\";\r\nimport \"../index.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [],\r\n      searchText: \"\",\r\n      activeTab: \"Home\"\r\n    };\r\n  }\r\n\r\n  toggleComplete = index => {\r\n    this.setState({\r\n      todos: this.state.todos.map((todo, ind) => {\r\n        if (ind === index) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n\r\n  deleteTask = index => {\r\n    this.state.todos.splice(index, 1);\r\n    this.setState({\r\n      todos: this.state.todos\r\n    });\r\n  };\r\n\r\n  addingTask = value => {\r\n    this.setState({\r\n      todos: [\r\n        {\r\n          title: value,\r\n          completed: false\r\n        },\r\n        ...this.state.todos\r\n      ]\r\n    });\r\n  };\r\n\r\n  getTab = (activeTab, tabs) => {\r\n    tabs.forEach(el => {\r\n      if (activeTab === el) {\r\n        this.setState({\r\n          activeTab: el\r\n        })\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      searchText: e.target.value\r\n    });\r\n  };\r\n\r\n  filterData = (array = [], search = \"\") =>\r\n    array.filter(value => value.title.includes(search));\r\n\r\n  filterTab = (array = [], activeTab = 'Home') => {\r\n    if (activeTab === \"Home\") {\r\n      return array;\r\n    } else if (activeTab === \"Completed\") {\r\n      return array.filter(el => el.completed)\r\n    } else {\r\n      return array.filter(el => !el.completed);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"top-bar clearfix\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"logo-div\">To-Do List</div>\r\n            <div className=\"navbar-div\">\r\n              <Navigation getTab={this.getTab} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <Search\r\n            handleInput={this.handleInput}\r\n            searchText={this.state.searchText}\r\n          />\r\n          <div className=\"todo-list-div\">\r\n            <ToDoList\r\n              todos={this.filterTab(this.filterData(this.state.todos, this.state.searchText), this.state.activeTab)}\r\n              toggleComplete={this.toggleComplete}\r\n              deleteTask={this.deleteTask}\r\n              addingTask={this.addingTask}\r\n            />\r\n            <EmptyDiv numberList={this.state.todos.length} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//<Buttons classname=\"btn btn-blue\" color=\"blue\" name=\"Add Task\" />\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}